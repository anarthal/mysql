[/
    Copyright (c) 2019-2021 Ruben Perez Hidalgo (rubenperez038 at gmail dot com)
   
    Distributed under the Boost Software License, Version 1.0. (See accompanying
    file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
]

[section:ssl SSL/TLS]

This library fully supports connecting to MySQL over SSL/TLS. In fact, all examples
make use of TLS connections, as TLS is required for some MySQL configurations (more on this later).

[heading SSL-enabled streams]

To use SSL/TLS, you must use a [reflink connection] or a [reflink socket_connection] with a 
[reflink Stream] that supports SSL. A SSL-enabled stream must inherit from
[asioreflink ssl__stream_base ssl::stream_base]. This includes both
[asioreflink ssl__stream ssl::stream] and [beastreflink boost__beast__ssl_stream ssl_stream].

To make life easier, the type aliases [reflink tcp_ssl_connection] and [reflink unix_ssl_connection]
are provided, for TCP and UNIX connections over TLS, respectively.

[heading When is the SSL handshake performed?]

The SSL handshake is performed while establishing the connection to the MySQL server,
as part of the [refmem connection handshake] and [refmem connection async_handshake]. This contrasts
with libraries like __Beast__, where it's the user resposibility to invoke the SSL handshake on the
underlying stream before performing any operation.

We take this approach because the SSL handshake is part of the MySQL protocol's handshake:
the client and server exchange several unencrypted messages, then perform the SSL handshake,
and continue exchanging encrypted messages, until the connection either succeeds or fails.
This scheme allows the SSL negotiation feature (see below for more info).

You can set any SSL/TLS parameters on the [asioreflink ssl__context ssl::context] required
to create a [reflink connection] using a SSL-enabled stream type. This context will be passed
to the stream's constructor. You can configure any setting allowed by [asioreflink ssl__context ssl::context],
including SSL certificate validation. Check [link mysql.examples.ssl this example] for an example
on this topic.

If SSL certificate validation is enabled and fails, the [refmem connection handshake] or 
[refmem connection async_handshake] operation will fail with the relevant error code.

SSL shutdown is performed by the library, too, by the [refmem connection quit] and 
[refmem connection async_quit] functions. MySQL doesn't always close SSL connections
gracefully, so these functions ignore any errors generated by the TLS shutdown.

If you are using [refmem socket_connection], note that [refmem socket_connection connect]
will take care of the SSL handshake (as it calls [refmem connection handshake]), and
[refmem socket_connection close] will perform the SSL shutdown (as it calls [refmem connection quit]).




* We support SSL negotiation: for a SSL-capable stream, we can conditionally use SSL
  if the server supports it. See relevant bits
* Some authentication methods require SSL/TLS; otherwise they won't work.

[endsect]